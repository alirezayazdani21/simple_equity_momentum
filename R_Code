

library(tidyverse)
library(quantmod)
library(PerformanceAnalytics)
options(digits=4,scipen = 0)


# The symbols vector holds our tickers. 
symbols <- c("IBM","NFLX",
             "C","GS","JPM","MS","BAC","DB", #finance
             "AMZN","AAPL","MSFT","GOOGL",#tech
             "PFE","MRK","GSK","NVS",#drugs/bio
             "BP","CVX","XOM","TOT",#oil&gas
             "F","GM","TM","HMC","TSLA","TTM",#auto
             "KR","TGT","WMT","TJX","TRIP","SBUX","TSCO")#consumer/retail


# The prices object will hold our raw price data throughout this book.
levels <- list()
getSymbols(symbols, src = 'yahoo', 
           from = '2010-01-01')
for(i in 1:length(symbols)) {
  prices <- Ad(get(symbols[i]))
  colnames(prices) <- symbols[i]
  levels[[i]] <- prices
}

prices<-na.omit(do.call(cbind, levels))

rm(list=setdiff(ls(), "prices"))

#plot(prices$TSLA)

prices_monthly <- to.monthly(prices, indexAt = "last", OHLC = FALSE)

returns_monthly <- na.omit(Return.calculate(prices_monthly, method = "log"))

returns_monthly <- returns_monthly[-nrow(returns_monthly),]

ret_mon_p1 <- returns_monthly + 1

momentum_score <- lag.xts(rollapply(ret_mon_p1, width = 12, FUN = prod) -1 )
  
#momentum_rank <- data.frame(t(apply(-momentum_score, 1, rank, ties.method='min',na.last="keep")))
#momentum_signal <- ifelse(momentum_rank<10,1,0)

momentum_pct_rank <- data.frame(t(apply(-momentum_score, 1, percent_rank))) 
#%>% na.omit(.)

momentum_pct_rnk_signal <- ifelse(momentum_pct_rank < 0.1 , 1 , 0)

momentum_returns<-momentum_pct_rnk_signal*returns_monthly

period_total<-apply(momentum_returns,1,sum) %>% as.xts(order.by=index(momentum_returns))

momentum_returns_xts<-cbind.xts(momentum_returns,period_total) %>% na.omit(.)


chart.RelativePerformance(momentum_returns_xts$period_total,
                          Rb=0,
                          main="Momentum Cumulative Return Index")

charts.PerformanceSummary(momentum_returns_xts$period_total,
                          Rb=0,col=2,
                          main="Momentum Cumulative Return Index")


strategy_perf<-rbind.data.frame(
  Return.annualized(momentum_returns_xts$period_total),
  sd.annualized(momentum_returns_xts$period_total),
  #SharpeRatio.annualized(momentum_returns_xts$period_total),
  AdjustedSharpeRatio(momentum_returns_xts$period_total),
  SortinoRatio(momentum_returns_xts$period_total),
  skewness(momentum_returns_xts$period_total),
  kurtosis(momentum_returns_xts$period_total),
  maxDrawdown(momentum_returns_xts$period_total))

rownames(strategy_perf)<-c("Ret","Risk","SR","Sortino",
                              "Skewness",
                              "Kurtosis","MaxDD")

print(strategy_perf)
   
library(gridExtra)
library(grid)
grid.table(strategy_perf)


